# HAProxy Configuration for Fresh 2-Node Patroni Cluster
# Following Medium article best practices with proper health checks
# =================================================================

global
    maxconn 4096
    log stdout local0
    stats timeout 30s
    daemon

defaults
    mode tcp
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms
    log global
    retries 3
    option redispatch

# HAProxy Statistics Dashboard
listen stats
    bind *:8404
    mode http
    stats enable
    stats uri /
    stats refresh 10s
    stats show-node
    stats show-legends
    stats admin if TRUE

# Primary PostgreSQL Frontend - Read/Write Operations
frontend postgres_primary_frontend
    bind *:5000
    mode tcp
    default_backend postgres_primary_backend

# Replica PostgreSQL Frontend - Read-Only Operations  
frontend postgres_replica_frontend
    bind *:5001
    mode tcp
    default_backend postgres_replica_backend

# Primary Backend - Routes to Patroni Primary
backend postgres_primary_backend
    mode tcp
    balance roundrobin
    
    # Patroni health checks using REST API
    # Check if node is primary (master) via Patroni API
    server patroni-node1 10.10.10.150:5432 check port 8008 inter 5000 rise 2 fall 3
    server patroni-node2 10.10.10.105:5432 check port 8009 inter 5000 rise 2 fall 3 backup

# Replica Backend - Routes to Patroni Replicas for read-only queries
backend postgres_replica_backend
    mode tcp
    balance roundrobin
    
    # Patroni health checks for replica nodes
    # Check if node is replica via Patroni API
    server patroni-node1 10.10.10.150:5432 check port 8008 inter 5000 rise 2 fall 3
    server patroni-node2 10.10.10.105:5432 check port 8009 inter 5000 rise 2 fall 3
    
    # Backup: route read queries to primary if no replicas available
    server patroni-primary-backup 10.10.10.150:5432 check port 8008 inter 5000 rise 2 fall 3 backup

# Health check section for monitoring
listen health_check
    bind *:8405
    mode http
    option httpchk GET /health
    http-check expect status 200
    server patroni-node1 10.10.10.150:8008 check
    server patroni-node2 10.10.10.105:8009 check
